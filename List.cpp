#include <iomanip>  // setw
#include <iostream> // ostream, endl
#include "List.h"

namespace CS175
{
    int List::created_list_count()
    {
        return list_count;
    }

    int List::alive_node_count()
    {
        return Node::nodes_alive;
    }

    /////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////
    // public methods


    /////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////
    // private methods
    List::Node *List::new_node(int data) const
    {
        // Make sure we have room
        Node *node = new Node(data); // create the node
        return node;
    }


    /////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////
    // non-members

    /////////////////////////////////////////////////////////////////////////
    // Function: operator<<
    //  Purpose: Output the list into an ostream object
    //   Inputs: os - ostream object
    //           list - the List to output
    //  Outputs: Returns an ostream object.
    /////////////////////////////////////////////////////////////////////////
    std::ostream & operator<<(std::ostream & os_, const List &list_)
    {
        // Start at the top
        List::Node *pnode = list_.head;

        // Print each item
        while (pnode != 0)
        {
            os_ << std::setw(4) << pnode->data;
            pnode = pnode->next;
        }
        os_ << std::endl;
        return os_;
    }

} //namespace CS175
